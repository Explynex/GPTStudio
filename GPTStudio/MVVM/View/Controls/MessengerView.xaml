<UserControl x:Class="GPTStudio.MVVM.View.Controls.MessengerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:viewmodels="clr-namespace:GPTStudio.MVVM.ViewModels" 
             xmlns:mdxam="clr-namespace:MdXaml;assembly=MdXaml"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance viewmodels:MessengerViewModel}"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>

        <Style x:Key="ListBoxItemIcon" TargetType="icon:PackIconFontAwesome">
            <Setter Property="Kind" Value="HubspotBrands"/>
            <Setter Property="Tag" Value="Chat GPT"/>
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="IsHitTestVisible" Value="True"/>
            <Setter Property="Foreground" Value="{DynamicResource PurpleGradient1}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Role}" Value="User">
                    <Setter Property="Kind" Value="UserRegular"/>
                    <Setter Property="Tag" Value="Me"/>
                    <Setter Property="IsHitTestVisible" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="MarkdownTemplate" DataType="ListBoxItem">
            <Border Background="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}},Path=Tag}" Height="Auto" CornerRadius="0 15 15 15" Padding="10">
                <Grid>
                    <DockPanel VerticalAlignment="Top">
                        <icon:PackIconFontAwesome x:Name="icon" Style="{StaticResource ListBoxItemIcon}"/>

                        <TextBlock Text="{Binding ElementName=icon,Path=Tag}" Foreground="#fff" FontSize="14" FontWeight="Medium" Margin="10 0 0 0"/>

                        <Button Style="{StaticResource ModernFlatButton}" VerticalAlignment="Top" Margin="10 4 0 0"
                                            Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}, Path=DataContext.ListenMessageCommand}"
                                            CommandParameter="{Binding}">
                            <icon:PackIconFontAwesome Kind="VolumeDownSolid" Height="11" Width="11"/>
                        </Button>

                        <ToggleButton x:Name="LockContext" Style="{StaticResource DynamicContentButton}" Margin="0 4 0 0" 
                                      Tag="{x:Static icon:PackIconFontAwesomeKind.UnlockSolid}" Width="11" Height="11"
                                      Content="{x:Static icon:PackIconFontAwesomeKind.LockSolid}" HorizontalAlignment="Right"/>

                    </DockPanel>

                    <mdxam:MarkdownScrollViewer Markdown="{Binding ChatCompletion.Text}" Background="Transparent" FocusVisualStyle="{x:Null}" IsHitTestVisible="{Binding ElementName=LockContext,Path=IsChecked}"
                                                SelectionOpacity="0.3" SelectionBrush="{DynamicResource PrimarySubBrush}"
                                                Foreground="{DynamicResource PrimaryForegroundBrush}" Margin="30 25 0 0" >
                        <mdxam:MarkdownScrollViewer.MarkdownStyle>
                            <Style TargetType="FlowDocument" BasedOn="{x:Static mdxam:MarkdownStyle.GithubLike}">
                                <Setter Property="FontSize" Value="13"/>
                                <!-- <Setter Property="MaxPageWidth" Value="{Binding Path=Tag,RelativeSource={RelativeSource FindAncestor, AncestorType=mdxam:MarkdownScrollViewer}}"/> -->
                                <Style.Resources>
                                    <Style TargetType="avalonEdit:TextEditor" xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit">
                                        <Setter Property="Background"      Value="{DynamicResource TertiaryBackgroundBrush}"/>
                                        <Setter Property="BorderBrush"     Value="{DynamicResource PurpleGradient}"/>
                                        <Setter Property="BorderThickness" Value="0,2,0,2"/>
                                        <Setter Property="Foreground" Value="#fff"/>
                                        <Setter Property="Padding"                       Value="5"/>
                                    </Style>

                                    <Style TargetType="Run">
                                        <Style.Triggers>
                                            <Trigger Property="Tag" Value="CodeSpan">
                                                <Setter Property="FontFamily" Value="Courier New"/>
                                                <Setter Property="Foreground" Value="{DynamicResource PurpleGradient1}"/>
                                                <Setter Property="Background" Value="{DynamicResource TertiaryBackgroundBrush}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>

                                    <Style TargetType="Span">
                                        <Style.Triggers>
                                            <Trigger Property="Tag" Value="CodeSpan">
                                                <Setter Property="Foreground" Value="{DynamicResource PurpleGradient1}"/>
                                                <Setter Property="Background" Value="{DynamicResource TertiaryBackgroundBrush}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>

                                    <Style TargetType="Table">
                                        <Setter Property="CellSpacing" Value="0"/>
                                        <Setter Property="BorderThickness" Value="1"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource PurpleGradient1}"/>
                                    </Style>

                                    <Style TargetType="TableRowGroup">
                                        <Style.Triggers>
                                            <Trigger Property="Tag" Value="TableHeader">
                                                <Setter Property="FontWeight" Value="Medium"/>
                                                <Setter Property="Background" Value="{DynamicResource PurpleGradient1}"/>
                                                <Setter Property="Foreground" Value="#fff"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>

                                    <Style TargetType="TableCell">
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBackgroundBrush}"/>
                                        <Setter Property="Padding" Value="2"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TableRow}}, Path=Tag}" Value="EvenTableRow">
                                                <Setter Property="Background" Value="{DynamicResource PrimarySubBrush}"/>
                                                <Setter Property="BorderThickness" Value="0"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Style.Resources>
                            </Style>
                        </mdxam:MarkdownScrollViewer.MarkdownStyle>
                    </mdxam:MarkdownScrollViewer>
                </Grid>
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="TextTemplate" DataType="ListBoxItem">
            <Border HorizontalAlignment="Left" Background="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}},Path=Tag}"
                    CornerRadius="0 15 15 15" Padding="10">
                <Grid>

                    <DockPanel  VerticalAlignment="Top">
                        <icon:PackIconFontAwesome x:Name="icon" Style="{StaticResource ListBoxItemIcon}"/>

                        <TextBlock Text="{Binding ElementName=icon,Path=Tag}" Foreground="#fff" FontSize="14" FontWeight="Medium" Margin="10 0 0 0"/>


                        <ToggleButton Style="{StaticResource DynamicContentButton}" Margin="10 4 0 0" d:IsChecked="False"
                                      Visibility="{Binding ElementName=icon,Path=IsHitTestVisible,Converter={StaticResource BoolToVis}}"
                                      Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}, Path=DataContext.ListenMessageCommand}"
                                      CommandParameter="{Binding}" IsChecked="{Binding IsMessageListening,Mode=OneWay}"
                                      Tag="{x:Static icon:PackIconFontAwesomeKind.StopSolid}" Width="11" Height="11"
                                      Content="{x:Static icon:PackIconFontAwesomeKind.VolumeDownSolid}" 
                                      HorizontalAlignment="Right" VerticalAlignment="Top"/>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Right" FontSize="9" Margin="10 0 3 2" Foreground="{DynamicResource PrimaryForegroundBrush}">
                            <Run Text="Tokens:"/>
                            <Run Text="{Binding Tokens,Mode=OneWay}" d:Text="125" Foreground="{DynamicResource LightBlueGradient}"/>
                        </TextBlock>
                    </DockPanel>

                    <TextBox Background="Transparent" BorderThickness="0" BorderBrush="Transparent"
                             SelectionOpacity="0.3" SelectionBrush="{DynamicResource PrimarySubBrush}"
                             Text="{Binding ChatCompletion.Text,Mode=OneWay}" IsReadOnly="True" Margin="30 25 0 0" Foreground="#fff" Opacity="0.7" TextWrapping="WrapWithOverflow"/>
                </Grid>
            </Border>
        </DataTemplate>
    </UserControl.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition  Width="260" MinWidth="220" MaxWidth="360"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Border Background="{DynamicResource SecondaryBackgroundBrush}">
            <Grid>
                <TextBox x:Name="ChatSearchBox" Padding="0 0 23 0" MaxLength="60" Text="{Binding SearchBoxText,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Tag="Search . . ." Style="{StaticResource ModernTextBox}" Margin="12 35 12 12" VerticalAlignment="Top"/>

                <StackPanel VerticalAlignment="Bottom" d:Visibility="Visible"
                    Margin="0 0 0 15" Opacity="{Binding ElementName=createNewChatBorder,Path=Tag}"
                    Visibility="{Binding Chats.Count,Converter={StaticResource BoolToVisInverted}}">
                    <TextBlock Text="No chats yet, add a new one" Width="130" TextWrapping="Wrap"
                       HorizontalAlignment="Center" TextAlignment="Center"
                       Foreground="{DynamicResource PrimaryForegroundBrush}"
                       FontWeight="Bold" FontSize="18"/>
                    <icon:PackIconFontAwesome Kind="ArrowDownSolid" HorizontalAlignment="Center" Margin="0 10 0 0"/>
                </StackPanel>
                
                <Button Visibility="{Binding ElementName=ChatSearchBox,Path=Text.Length,Converter={StaticResource BoolToVis}}"
                        Style="{StaticResource ModernSpinButton}" Width="15" Height="15"
                        VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0 47.5 25 0"
                        Command="{Binding ClearSearchBoxCommand}" >
                    <icon:FontAwesome Kind="TimesSolid" Width="15" Height="15"/>
                </Button>

                <ListBox x:Name="chats"  Margin="0 90 0 0" Background="Transparent" 
                         VirtualizingPanel.CacheLengthUnit="Item"
                         VirtualizingPanel.CacheLength="1,1" VirtualizingPanel.ScrollUnit="Pixel"
                         VirtualizingPanel.VirtualizationMode="Recycling"
                         ScrollViewer.CanContentScroll="True" d:ItemsSource="{d:SampleData ItemCount=2}"
                         ScrollViewer.VerticalScrollBarVisibility="Auto"
                         SelectedItem="{Binding SelectedChat,Mode=TwoWay}"
                         PreviewMouseLeftButtonDown="PreviewCancelRightMouseButton"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                         BorderThickness="0" ItemsSource="{Binding Chats}" HorizontalContentAlignment="Stretch">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid Tag="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"
                                  Background="Transparent" PreviewMouseRightButtonDown="PreviewCancelRightMouseButton" Height="68"
                                  MouseLeftButtonUp="ListBox_MouseLeftButtonUp" Cursor="Hand">
                                <Border CornerRadius="50" Background="{DynamicResource PurpleGradient1}" HorizontalAlignment="Left"
                                           Margin="10 0 0 0" Height="40" Width="40">
                                    <TextBlock Text="{Binding Name[0]}" VerticalAlignment="Center"
                                               HorizontalAlignment="Center" FontSize="15" FontWeight="Medium"
                                               Foreground="#ffff" Opacity="0.7" />
                                </Border>

                                <TextBlock Text="{Binding Name}" FontSize="14" Foreground="#fff" VerticalAlignment="Top"
                                           Margin="60 10 15 0" TextTrimming="CharacterEllipsis" 
                                           TextWrapping="NoWrap" FontWeight="Medium" Opacity="0.85"/>

                                <Grid.ContextMenu>
                                    <ContextMenu MinWidth="150" MaxWidth="220">
                                        <MenuItem StaysOpenOnClick="True" Tag="{x:Static Brushes.Transparent}" BorderBrush="{x:Static Brushes.Transparent}"
                                                  Cursor="Arrow" Icon="{x:Static icon:PackIconFontAwesomeKind.FileSignatureSolid}">
                                            <MenuItem.Header>
                                                <TextBox Text="{Binding Name,UpdateSourceTrigger=LostFocus}" BorderThickness="0"  
                                                 SelectionBrush="{DynamicResource SecondarySubBrush}" MaxLength="50"
                                                 FontWeight="Medium" Background="Transparent" FontSize="13.5" CaretBrush="{DynamicResource SecondaryForegroundBrush}"/>
                                            </MenuItem.Header>
                                        </MenuItem>

                                        <Separator Style="{StaticResource FillSeparator}" Height="3" Margin="0 6 0 6" Background="{DynamicResource PrimaryBackgroundBrush}"/>

                                        <MenuItem Header="Clear chat" Icon="{x:Static icon:PackIconFontAwesomeKind.BackspaceSolid}"
                                                  Command="{Binding PlacementTarget.Tag.ClearMessagesCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                                  CommandParameter="{Binding}"/>

                                        <MenuItem Header="Delete chat" Icon="{x:Static icon:PackIconFontAwesomeKind.TrashAltSolid}" Foreground="PaleVioletRed" 
                                                  FontWeight="Medium" Command="{Binding PlacementTarget.Tag.DeleteChatCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                                  CommandParameter="{Binding}"/>
                                    </ContextMenu>
                                </Grid.ContextMenu>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>

                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="BorderThickness" Value="0 0 0 3"/>
                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBackgroundBrush}"/>
          
                            <Style.Resources>
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{DynamicResource TertiaryBackgroundColor}" />
                                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{DynamicResource TertiaryBackgroundColor}" />
                            </Style.Resources>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#25263e"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
                <Border x:Name="createNewChatBorder" VerticalAlignment="Bottom" Opacity="0.9" CornerRadius="5 5 0 0" 
                        Background="{DynamicResource TertiaryBackgroundBrush}" Height="45" Margin="0 0 0 -35">
                    <Button Style="{StaticResource ModernFlatButton}" Command="{Binding AddNewChatCommand}"
                            FontSize="14"  FontWeight="Medium" Content="➕ Create new chat"/>
                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Tag" Value="0"/>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Storyboard.TargetProperty="Margin"
                                                                     To="0 0 0 0" Duration="0:0:0:0.40">
                                                    <ThicknessAnimation.EasingFunction>
                                                        <CircleEase EasingMode="EaseIn"/>
                                                    </ThicknessAnimation.EasingFunction>
                                                </ThicknessAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Storyboard.TargetProperty="Margin"
                                                                     To="0 0 0 -35" Duration="0:0:0:0.40">
                                                    <ThicknessAnimation.EasingFunction>
                                                        <CircleEase EasingMode="EaseIn"/>
                                                    </ThicknessAnimation.EasingFunction>
                                                </ThicknessAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter Property="Tag" Value="0.7"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
            </Grid>
        </Border>

        <GridSplitter BorderThickness="0" FocusVisualStyle="{x:Null}" Grid.Column="0" Width="3" Background="Transparent"/>

        <Grid Grid.Column="1" Margin="3 0 0 3" Visibility="{Binding ElementName=Chat,Path=Visibility,Converter={StaticResource BoolToVis}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition MinHeight="50" MaxHeight="150" Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <ListBox x:Name="messages" BorderThickness="0" Margin="0 45 0 0" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     Background="Transparent" d:ItemsSource="{d:SampleData ItemCount=2}"
                     VerticalAlignment="Bottom" ItemsSource="{Binding SelectedChat.Messages}"
                     VirtualizingPanel.ScrollUnit="Pixel"
                     Padding="0 0 10 0" SelectionMode="Multiple"
                     ScrollViewer.CanContentScroll="True"
                     VirtualizingPanel.IsVirtualizing="True">
                <ListBox.Style>
                    <Style TargetType="ListBox">
                        <Setter Property="ItemsControl.ItemTemplate" Value="{StaticResource TextTemplate}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding UsingMarkdown}" Value="True">
                                <Setter Property="ItemsControl.ItemTemplate" Value="{StaticResource MarkdownTemplate}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.Style>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Margin" Value="2 0 0 10"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Grid Background="Transparent" MouseLeftButtonDown="Border_PreviewMouseLeftButtonDown" PreviewMouseRightButtonDown="PreviewCancelRightMouseButton">
                                        <ContentPresenter />
                                    </Grid>
                                    
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        
                        <Setter Property="Tag" Value="{DynamicResource SecondaryBackgroundBrush}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Role}" Value="user">
                                <Setter Property="Tag" Value="{DynamicResource TertiaryBackgroundBrush}"/>
                            </DataTrigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Tag" Value="{DynamicResource SecondarySubBrush}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>

            <Border VerticalAlignment="Top" Grid.ColumnSpan="2" Margin="0 3 0 0" CornerRadius="3" Height="35" Background="#202036">
                <DockPanel>
                    <Button VerticalAlignment="Center" Height="30" Width="30" Style="{StaticResource ModernFlatButton}" HorizontalAlignment="Left" Margin="10 0 0 0" IsCancel="True"
                            Command="{Binding ExitChatCommand}">
                        <icon:FontAwesome Kind="ArrowLeftSolid"/>
                    </Button>
                    <TextBlock Text="{Binding SelectedChat.Name}" Foreground="#FFF" Opacity="0.8"
                               VerticalAlignment="Center" HorizontalAlignment="Left" Margin="30 0 0 0" FontSize="15"
                               FontWeight="Medium"/>


                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" Margin="0 0 10 0"
                                Visibility="{Binding ElementName=messages,Path=SelectedIndex,Converter={StaticResource IndexToVisibility}}">
                        <Button Style="{StaticResource ModernFlatButton}" Background="{DynamicResource PurpleGradient1}" BorderThickness="3"
                                ContentStringFormat="Delete {0}" Padding="15 5" Height="28" FontWeight="Medium" Width="100" Foreground="{DynamicResource SecondaryForegroundBrush}"
                                Content="{Binding ElementName=messages,Path=SelectedItems.Count}"
                                Command="{Binding DeleteMessageCommand}"
                                CommandParameter="{Binding ElementName=messages,Path=SelectedItems}"/>

                        <Button Style="{StaticResource ModernSpinButton}" Width="15" Height="15"
                        VerticalAlignment="Center" Margin="10 0 0 0" Click="UnselectAllMessages" >
                            <icon:FontAwesome Kind="TimesSolid" Width="15" Height="15"/>
                        </Button>
                    </StackPanel>

                    <ToggleButton VerticalAlignment="Center" Height="17" Width="17" Margin="0 0 10 0"
                           Style="{StaticResource DynamicContentButton}" HorizontalAlignment="Right"
                          Content="{x:Static icon:PackIconFontAwesomeKind.OutdentSolid}"
                          Tag="{x:Static icon:PackIconFontAwesomeKind.IndentSolid}">
                        <ToggleButton.Triggers>
                            <EventTrigger RoutedEvent="ToggleButton.Checked">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="rightBorder" Storyboard.TargetProperty="Width"
                                                                     To="200" Duration="0:0:0:0.40">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="rightBorder" Storyboard.TargetProperty="Width"
                                                                     To="0" Duration="0:0:0:0.40">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ToggleButton.Triggers>
                    </ToggleButton>
                </DockPanel>
            </Border>

            <Grid x:Name="rightBorder" Grid.Column="2" Margin="0 40 0 2" Width="0"
                    Background="#202036" d:Width="200">
                <Grid.RowDefinitions>
                    <RowDefinition Height="300"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                
                <TextBlock Text="System message" FontSize="13" Foreground="{DynamicResource LightBlueGradient}" 
                           Margin="10 0 0 0" FontWeight="Medium" VerticalAlignment="Bottom"/>
               
                <Rectangle Fill="{DynamicResource PrimaryBackgroundBrush}" Height="3"
                           VerticalAlignment="Bottom" Margin="0 0 0 22"/>
                
                <TextBox Style="{StaticResource ModernTextBox}" Grid.Row="1" TextWrapping="Wrap" Background="Transparent"
                         Padding="0 3 0 0" Width="Auto" Height="Auto" VerticalContentAlignment="Stretch"
                         Margin="0 0 3 7" VerticalScrollBarVisibility="Auto" Tag="Message prompt . . .&#13;«You are helpful assistant»"/>
            </Grid>

            <Border  Grid.ColumnSpan="2" Background="{DynamicResource SecondaryBackgroundBrush}" Grid.Row="1"
                VerticalAlignment="Bottom" MinHeight="50" MaxHeight="150"  CornerRadius="3">
                <Grid>
                    <TextBox x:Name="messageBox" Style="{StaticResource ModernTextBox}" Background="Transparent" Tag="Send a message . . ."
                     TextWrapping="Wrap" Height="Auto" IsHitTestVisible="{Binding IsAudioRecording,Converter={StaticResource BoolInverter}}"
                             MaxLength="3000"  
                             Margin="0 0 50 0" VerticalScrollBarVisibility="Auto" Text="{Binding SelectedChat.TypingMessageText,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />

                    <Button Style="{StaticResource ModernFlatButton}" HorizontalAlignment="Right"
                        Width="35" Height="35" Margin="0 0 10 7" VerticalAlignment="Bottom"
                        IsDefault="True" Command="{Binding SendMessageCommand}" 
                        HorizontalContentAlignment="Center" VerticalContentAlignment="Center">

                        <icon:PackIconFontAwesome  Spin="False" Width="20" Height="20">
                            <icon:PackIconFontAwesome.Style>
                                <Style TargetType="icon:PackIconFontAwesome">
                                    <Setter Property="Kind" Value="PaperPlaneRegular"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=messageBox,Path=Text.Length}" Value="0">
                                            <Setter Property="Kind" Value="MicrophoneSolid"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsAudioRecording}" Value="True">
                                            <Setter Property="Kind" Value="StopSolid"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </icon:PackIconFontAwesome.Style>
                        </icon:PackIconFontAwesome>

                    </Button>
                </Grid>
            </Border>

        </Grid>


        <Border d:Visibility="Collapsed" x:Name="Chat" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0.8"
                CornerRadius="15" Background="{DynamicResource SecondaryBackgroundBrush}" Padding="12">
            <TextBlock Text="Select a chat" FontSize="20" Foreground="#FFF" 
                       FontWeight="Medium"/>
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SelectedChat}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>

    </Grid>


    <UserControl.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard x:Name="StoryboardLoad">
                <Storyboard>
                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.6"/>

                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </UserControl.Triggers>
</UserControl>
