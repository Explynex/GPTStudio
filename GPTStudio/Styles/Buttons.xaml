<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks">
    <Style x:Key="CircleButton" TargetType="Button">
        <Setter Property="Background" Value="White"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Rectangle RadiusY="50" RadiusX="50" Fill="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TransparentButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>  
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DynamicContentButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource TertiaryForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Background="Transparent">
                        <icon:PackIconFontAwesome x:Name="Content" Kind="{TemplateBinding Content}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Opacity="1"/>
                        <icon:PackIconFontAwesome x:Name="Content2" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Kind="{TemplateBinding Tag}" Opacity="0"/>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.4" Storyboard.TargetName="Content2" 
                                                                    Storyboard.TargetProperty="Opacity" To="1"/>
                                        <DoubleAnimation Duration="0:0:0.4" Storyboard.TargetName="Content" 
                                                                    Storyboard.TargetProperty="Opacity" To="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.4" Storyboard.TargetName="Content2" 
                                                                    Storyboard.TargetProperty="Opacity" To="0"/>
                                        <DoubleAnimation Duration="0:0:0.4" Storyboard.TargetName="Content" 
                                                                    Storyboard.TargetProperty="Opacity"  To="1"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="#fff"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#fff"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernMenuRadioButton" TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundBrush}" />
        <Setter Property="Height" Value="45" />
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Margin" Value="0 0 0 15"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="Transparent">
                        <ContentPresenter x:Name="Content" Margin="0 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Center" />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0:0:0.4" Storyboard.TargetName="Content" 
                                                                    Storyboard.TargetProperty="(Border.Margin)"
                                                               From="0 0 0 0"  To="15 0 0 0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Content" Property="Margin" Value="15 0 0 0"/>
                            <Setter Property="Foreground" Value="#fff"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#fff"/>
                        </Trigger>

                        <EventTrigger RoutedEvent="Unchecked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation Duration="0:0:0.4" Storyboard.TargetName="Content" 
                                                                    Storyboard.TargetProperty="(Border.Margin)"
                                                               From="15 0 0 0"  To="0 0 0 0"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernFlatButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource TertiaryForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="#fff"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="3" Padding="{TemplateBinding Padding}" >
                        <ContentPresenter  VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#fff" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernSpinButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ModernFlatButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="50"
                                                RenderTransformOrigin="0.5 0.5">
                        <Border.RenderTransform>
                            <RotateTransform x:Name="SpinAngle" Angle="0"/>
                        </Border.RenderTransform>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SpinAngle"
                                                                         Storyboard.TargetProperty="Angle"
                                                                         To="180" Duration="0:0:0.7">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SpinAngle"
                                                                         Storyboard.TargetProperty="Angle"
                                                                         To="0" Duration="0:0:0.7">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernSwitchToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBackgroundBrush}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Width" Value="55"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="7" 
                                    Height="15" Margin="10 0 0 0"
                                    Width="30" HorizontalAlignment="Left"
                                    VerticalAlignment="Center" >
                        </Border>
                        <Ellipse x:Name="Ellipse" Height="23" Width="23"
                                     HorizontalAlignment="Left" VerticalAlignment="Center"
                                     Fill="{DynamicResource PrimaryForegroundBrush}"
                                     Stroke="{TemplateBinding BorderBrush}"
                                     StrokeThickness="4"/>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                            Storyboard.TargetProperty="Margin"
                                                            To="26 0 0 0"
                                                            Duration="0:0:0.2">
                                            <ThicknessAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseIn"/>
                                            </ThicknessAnimation.EasingFunction>
                                        </ThicknessAnimation>
                                        <ColorAnimation  Storyboard.TargetName="Border"  Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                         Duration="0:0:0.2" To="{DynamicResource PrimarySubColor}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                            Storyboard.TargetProperty="Margin"
                                                            To="0 0 0 0"
                                                            Duration="0:0:0.2">
                                            <ThicknessAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseIn"/>
                                            </ThicknessAnimation.EasingFunction>
                                        </ThicknessAnimation>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                      
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Ellipse" Property="Fill" Value="White"/>
                            <Setter TargetName="Ellipse" Property="Stroke" Value="{DynamicResource PurpleGradient1}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernSwitchToggleButtonSolid" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="LightBlue"/>
        <Setter Property="BorderBrush" Value="LightPink"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="15" 
                                    Height="30" 
                                    Width="79" HorizontalAlignment="Left"
                                    VerticalAlignment="Center" >
                        </Border>
                        <Ellipse x:Name="Ellipse" Height="26" Width="26" 
                                     HorizontalAlignment="Left" VerticalAlignment="Center"
                                     Fill="White"/>
                        <TextBlock x:Name="BottomText" Text="{TemplateBinding ContentStringFormat}" Margin="0 0 0 -12" HorizontalAlignment="Center" 
                                   FontSize="9" Foreground="{DynamicResource LightBlueGradient}" VerticalAlignment="Bottom"/>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                            Storyboard.TargetProperty="Margin"
                                                            To="50 0 0 0"
                                                            Duration="0:0:0.2">
                                            <ThicknessAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseIn"/>
                                            </ThicknessAnimation.EasingFunction>
                                        </ThicknessAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                            Storyboard.TargetProperty="Margin"
                                                            To="3 0 0 0"
                                                            Duration="0:0:0.2">
                                            <ThicknessAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseIn"/>
                                            </ThicknessAnimation.EasingFunction>
                                        </ThicknessAnimation>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="BottomText" Property="Text" Value="{Binding Path=Tag,RelativeSource={RelativeSource FindAncestor,AncestorType=ToggleButton}}"/>
                            <Setter TargetName="BottomText" Property="Foreground" Value="{Binding Path=BorderBrush,RelativeSource={RelativeSource FindAncestor,AncestorType=ToggleButton}}"/>
                            <Setter TargetName="Border" Property="Background" Value="{Binding Path=BorderBrush,RelativeSource={RelativeSource FindAncestor, AncestorType=ToggleButton}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>